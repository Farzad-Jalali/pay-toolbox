<!-- @TODO(sfount) local Javascript should be compiled/ built to do verification for forms -->
<!-- - this might even be easiest with preact although basic validation to start -->
<!-- @TODO(sfount) visual indication of required - visual indiciation of required w/ live accounts -->
<!-- @TODO(sfount) lots of ui/ pact tests for complete account creation process -->
{% from "components/input/macro.njk" import govukInput %}
{% from "components/radios/macro.njk" import govukRadios %}
{% from "components/button/macro.njk" import govukButton %}
{% from "components/error-summary/macro.njk" import govukErrorSummary %}
{% from "components/warning-text/macro.njk" import govukWarningText %}
{% extends "layout/layout.njk" %} 

{% block main %}
  <h1 class="govuk-heading-s">Create new gateway account</h1>

  {% for message in messages %}
    {{ govukErrorSummary({
      titleText: "There is a problem",
      errorList: [ { text: message } ]
    }) 
    }}
  {% endfor %}

  <form method="post" action="/gateway_accounts/create/confirm">
    <!-- @TODO(sfount) consider using standard markup vs. macros --> 
    <!-- @TODO(sfount) repopulating values in this method is very manual -->
    {{ govukRadios({
      classes: "govuk-radios--inline",
      idPrefix: "live",
      name: "live",
      fieldset: { 
        legend: { 
          text: "Live Status",
          isPageHeading: false
        }
      }, 
      items: [
        { value: "live", text: "Live", checked: recovered.live and recovered.live === "live" or true },
        { value: "not-live", text: "Not Live", checked: recovered.live === "not-live" }
      ]
    })
    }}

    <!-- @TODO(sfount) override govuk radios style to make them fit on a single page -->
    {{ govukRadios({
      classes: "govuk-radios--inline",
      idPrefix: "paymentMethod",
      name: "paymentMethod",
      fieldset: { 
        legend: { 
          text: "Payment Method",
          isPageHeading: false
        }
      }, 
      items: [
        { value: "card", text: "Card", checked: recovered.paymentMethod and recovered.paymentMethod === "card" or true },
        { value: "direct-debit", text: "Direct Debit", checked: recovered.paymentMethod === "direct-debit" }
      ]
    })
    }}

    {{ govukRadios({
      classes: "govuk-radios--inline",
      idPrefix: "provider",
      name: "provider",
      fieldset: { 
        legend: { 
          text: "Card Provider",
          isPageHeading: false
        }
      }, 
      items: [
        { value: "card-sandbox", text: "Sandbox", checked: recovered.provider and recovered.provider === "card-sandbox" or true },
        { value: "worldpay", text: "Worldpay", checked: recovered.provider === "worldpay" },
        { value: "smartpay", text: "Smartpay", checked: recovered.provider === "smartpay" },
        { value: "epdq", text: "Epdq", checked: recovered.provider === "epdq" },
        { value: "stripe", text: "Stripe", checked: recovered.provider === "stripe" }
      ]
    })
    }}
    
    {{ govukRadios({
      classes: "govuk-radios--inline",
      idPrefix: "provider",
      name: "provider",
      fieldset: { 
        legend: { 
          text: "Direct Debit Provider",
          isPageHeading: false
        }
      }, 
      items: [
        { value: "direct-debit-sandbox", text: "Sandbox", checked: recovered.provider === "direct-debit-sandbox" },
        { value: "gocardless", text: "Gocardless", checked: recovered.provider === "gocardless" }
      ]
    })
    }}
  
    {% if service %}
      <div class="govuk-form-group">
        {{ govukWarningText({
          text: "System link: this Gateway Account will be automatically asigned to this service."
          })
        }}
        <label class="govuk-label">Service Name</label>
        <input readonly class="govuk-input" id="serviceName" name="serviceName" type="text" value="{{ service.name }}" autocomplete="off">
        <input hidden id="systemLinkedService" name="systemLinkedService" value="{{ service.external_id }}">
      </div>
    {% else %}
      <div class="govuk-form-group">
        <label class="govuk-label">Service Name</label>
        <input class="govuk-input" id="serviceName" name="serviceName" type="text" value="{{ recovered.serviceName }}" autocomplete="off">
      </div>
    {% endif %}
        
    <div class="govuk-form-group">
      <label class="govuk-label">Description</label>
      <span class="govuk-hint">
        GOV.UK Pay standard: "${Department} ${Service} ${Provider} ${IsLive}"
      </span>
      <span class="govuk-hint">
        Blue Badge standard: "${Service} Blue Badge Admin Stripe LIVE"
      </span>

      <input class="govuk-input" id="description" name="description" type="text" value="{{ recovered.description }}" autocomplete="off">
    </div>

    <div class="govuk-form-group">
      <label class="govuk-label">Google Analytics ID</label>
      <span class="govuk-hint">
        GOV.UK Pay standard: "${Department}-${Service}"
      </span>
      <span class="govuk-hint">
        Blue Badge standard: "LG-${Service}-BB"
      </span>

      <input class="govuk-input" id="analyticsId" name="analyticsId" type="text" value="{{ recovered.analyticsId }}" autocomplete="off">
    </div>
    
    {% if linkedCredentials %} 
    <div class="govuk-form-group">
      <label class="govuk-label">Stripe Credentials</label>
      <span class="govuk-hint">
        This is only required for Stripe accounts
      </span>
      <input readonly class="govuk-input" id="credentials" name="credentials" type="text" value="{{ linkedCredentials }}" autocomplete="off">
      <input hidden id="systemLinkedCredentials" name="systemLinkedCredentials" value="{{ linkedCredentials }}">
    </div>
    {% else %}
    <div class="govuk-form-group">
      <label class="govuk-label">Stripe Credentials</label>
      <span class="govuk-hint">
        This is only required for Stripe accounts
      </span>
      <input class="govuk-input" id="credentials" name="credentials" type="text" value="{{ recovered.credentials }}" autocomplete="off">
    </div>
    {% endif %}
    
    {{ govukButton({
      text: "Submit"
      })
      }}

  </form>
{% endblock %}
